---
- name: Create test namespace
  k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ poolboy_test_namespace }}"

- name: Create anarchy test namespace
  k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ poolboy_test_babylon_anarchy_namespace }}"

- name: Clone redhat-cop/anarchy repository
  git:
    repo: https://github.com/redhat-cop/anarchy.git
    dest: "{{ poolboy_test_babylon_anarchy_git_path }}"

- name: Create symlink for anarchy babylon test role
  file:
    state: link
    dest: "{{ role_path }}/../{{ item }}"
    src: "{{ poolboy_test_babylon_anarchy_git_path }}/test/roles/{{ item }}"
  loop:
  - anarchy_test_babylon
  - anarchy_test_cleanup

- name: Create poolboy/anarchy RBAC
  k8s:
    definition: "{{ lookup('template', _template) }}"
  loop:
  - clusterrole.yaml.j2
  - clusterrolebinding.yaml.j2
  - role.yaml.j2
  - rolebinding.yaml.j2
  loop_control:
    loop_var: _template

- name: Cleanup Test Resources
  include_tasks: cleanup-resources.yaml

- name: Process template for Anarchy CRDs and ClusterRoles
  command: >-
    oc process --local -f https://raw.githubusercontent.com/redhat-cop/anarchy/master/install-template.yaml -o json
  register: r_oc_process_anarchy_install

- name: Create anarchy install resources
  k8s:
    definition: "{{ _resource }}"
  loop: "{{ r_oc_process_anarchy_install.stdout | from_json | json_query('items') }}"
  loop_control:
    loop_var: _resource
    label: "{{ _resource.kind }} {{ _resource.metadata.name }}"

- name: Process template for Anarchy Deployment
  command: >-
    oc process --local -f https://raw.githubusercontent.com/redhat-cop/anarchy/master/deploy-template.yaml -o json
  register: r_oc_process_anarchy_deploy

- name: Deploy Anarchy for Poolboy Test
  k8s:
    namespace: "{{ poolboy_test_babylon_anarchy_namespace }}"
    definition: "{{ _resource }}"
  loop: "{{ r_oc_process_anarchy_deploy.stdout | from_json | json_query('items') }}"
  loop_control:
    loop_var: _resource
    label: "{{ _resource.kind }} {{ _resource.metadata.name }}"

- name: Wait for Anarchy Deployment to become ready
  k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: anarchy
    namespace: "{{ poolboy_test_babylon_anarchy_namespace }}"
  register: r_get_anarchy_deployment
  failed_when: >-
    r_get_anarchy_deployment.resources[0].status.availableReplicas | default(0) == 0
  until: r_get_anarchy_deployment is success
  retries: 5
  delay: 3

- name: Wait for Anarchy Runner Pods to become available
  k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ poolboy_test_babylon_anarchy_namespace }}"
    label_selectors:
    - anarchy.gpte.redhat.com/runner=default
  register: r_get_anarchy_runner_pods
  failed_when: >-
    r_get_anarchy_runner_pods.resources | default([]) | length == 0
  until: r_get_anarchy_runner_pods is success
  retries: 5
  delay: 3

- name: Get Route for anarchy
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: anarchy
    namespace: "{{ poolboy_test_babylon_anarchy_namespace }}"
  register: r_get_route
  failed_when: r_get_route.resources | length != 1

- name: Set facts for anarchy variables
  set_fact:
    anarchy_namespace: "{{ poolboy_test_babylon_anarchy_namespace }}"
    anarchy_callback_base_url: "https://{{ r_get_route.resources[0].spec.host }}"
    anarchy_test_babylon_server_path: "{{ poolboy_test_babylon_anarchy_git_path }}/test/server"

- name: Run anarchy babylon test setup
  include_role:
    name: anarchy_test_babylon
    tasks_from: setup.yaml
