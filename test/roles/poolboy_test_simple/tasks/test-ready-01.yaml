---
- name: Create ResourceProvider test-ready-01
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceProvider
      metadata:
        name: test-ready-01
        namespace: "{{ poolboy_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        healthCheck: >-
          spec.numbervalue >= 0
        lifespan:
          default: 1d
          maximum: 7d
          relativeMaximum: 3d
        override:
          apiVersion: "{{ poolboy_domain }}/v1"
          kind: ResourceClaimTest
          metadata:
            name: "test-ready-01-{% raw %}{{ guid }}{% endraw %}"
            namespace: "{{ poolboy_test_namespace }}"
        parameters:
        - name: numbervar
          allowUpdate: true
          validation:
            openAPIV3Schema:
              type: integer
              default: 0
              minimum: 0
        readinessCheck: >-
          spec.numbervalue > 0
        template:
          definition:
            spec:
              numbervalue: "{% raw %}{{ numbervar | int }}{% endraw %}"
          enable: true
        updateFilters:
        - pathMatch: /spec/.*
          allowedOps:
          - replace

- name: Create ResourceClaim test-ready-01
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceClaim
      metadata:
        name: test-ready-01
        namespace: "{{ poolboy_test_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        provider:
          name: test-ready-01
          parameterValues:
            numbervar: 0

- name: Verify handling of ResourceClaim test-ready-01
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-ready-01
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: >-
    r_get_resource_claim.resources[0].status.ready != false or
    r_get_resource_claim.resources[0].status.lifespan.firstReady is defined or
    (
      r_get_resource_claim.resources[0].status.lifespan.end | to_datetime("%Y-%m-%dT%H:%M:%SZ") -
      r_get_resource_claim.resources[0].status.lifespan.start | to_datetime("%Y-%m-%dT%H:%M:%SZ")
    ).total_seconds() != 24 * 60 * 60
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- name: Update ResourceClaim test-ready-01 to become ready
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-ready-01
    namespace: "{{ poolboy_test_namespace }}"
    state: patched
    definition:
      spec:
        provider:
          parameterValues:
            numbervar: 1

- name: Pause to ensure timestamp change
  pause:
    seconds: 1

- name: Verify update handling of ResourceClaim test-ready-01
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-ready-01
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: >-
    r_get_resource_claim.resources[0].status.ready != true or
    r_get_resource_claim.resources[0].status.lifespan.firstReady is undefined or
    (
      r_get_resource_claim.resources[0].status.lifespan.end | to_datetime("%Y-%m-%dT%H:%M:%SZ") -
      r_get_resource_claim.resources[0].status.lifespan.firstReady | to_datetime("%Y-%m-%dT%H:%M:%SZ")
    ).total_seconds() != 24 * 60 * 60
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- name: Delete ResourceClaim test-ready-01
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-ready-01
    namespace: "{{ poolboy_test_namespace }}"
    state: absent

- name: Verify delete of ResourceClaim test-ready-01
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-ready-01
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: r_get_resource_claim.resources | length != 0
  until: r_get_resource_claim is success
  retries: 5
  delay: 1
...
