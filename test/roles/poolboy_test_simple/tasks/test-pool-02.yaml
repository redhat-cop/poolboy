---
# Test ResourcePools with lifespan configuration
- name: Create ResourceProvider test-pool-02
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceProvider
      metadata:
        name: test-pool-02
        namespace: "{{ poolboy_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        override:
          apiVersion: "{{ poolboy_domain }}/v1"
          kind: ResourceClaimTest
          metadata:
            name: "test-pool-02-{% raw %}{{ guid }}{% endraw %}"
            namespace: "{{ poolboy_test_namespace }}"
        template:
          enable: true
        validation:
          openAPIV3Schema:
            additionalProperties: false
            properties:
              spec:
                additionalProperties: false
                properties:
                  value:
                    type: string
                required:
                - value
                type: object

- name: Create ResourcePool test-pool-02
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourcePool
      metadata:
        name: test-pool-02
        namespace: "{{ poolboy_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        lifespan:
          default: >-
            {%- raw -%}
            {%- if 'extended-lifespan' in resource_claim.annotations -%}
            12h
            {%- else -%}
            30m
            {%- endif -%}
            {%- endraw -%}
          maximum: >-
            {%- raw -%}
            {%- if 'extended-lifespan' in resource_claim.annotations -%}
            2d
            {%- else -%}
            2h
            {%- endif -%}
            {%- endraw -%}
          relativeMaximum: >-
            {%- raw -%}
            {%- if 'extended-lifespan' in resource_claim.annotations -%}
            1d
            {%- else -%}
            1h
            {%- endif -%}
            {%- endraw -%}
          unclaimed: 6h
        minAvailable: 1
        resources:
        - provider:
            apiVersion: "{{ poolboy_domain }}/v1"
            kind: ResourceProvider
            name: test-pool-02
            namespace: "{{ poolboy_namespace }}"
          template:
            spec:
              value: foo

- name: Verify ResourceHandle for test-pool-02
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    namespace: "{{ poolboy_namespace }}"
    label_selectors:
    - "{{ poolboy_domain }}/resource-pool-name = test-pool-02"
  register: r_get_resource_handles
  vars:
    __unbound_handles: >-
      {{ r_get_resource_handles.resources | json_query('[?spec.resourceClaim==null]') }}
  failed_when: >-
    __unbound_handles | length != 1

- name: Confirm unclaimed lifespan end for ResourceHandle in test-pool-02
  vars:
    __state: "{{ r_get_resource_handles.resources[0] }}"
  assert:
    that:
    - >-
        6 * 60 * 60 == (
          __state.spec.lifespan.end | to_datetime('%Y-%m-%dT%H:%M:%SZ') -
          __state.metadata.creationTimestamp | to_datetime('%Y-%m-%dT%H:%M:%SZ')
        ).total_seconds()

- name: Create ResourceClaim test-pool-02
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceClaim
      metadata:
        name: test-pool-02
        namespace: "{{ poolboy_test_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        resources:
        - provider:
            name: test-pool-02
          template:
            spec:
              value: foo

- name: Verify handling of ResourceClaim test-pool-02
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-pool-02
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: >-
    r_get_resource_claim.resources[0].status.resources[0].state is undefined
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- name: Save facts from for ResourceClaim test-pool-02
  set_fact:
    resource_claim_test_pool_02_guid: >-
      {{ r_get_resource_claim.resources[0].status.resourceHandle.name[-5:] }}
    resource_claim_test_pool_02_resource_handle_name: >-
      {{ r_get_resource_claim.resources[0].status.resourceHandle.name }}

- name: Verify state of ResourceClaim test-pool-02
  vars:
    __state: "{{ r_get_resource_claim.resources[0] }}"
  assert:
    that:
    - __state.status.resources[0].state.metadata.name == 'test-pool-02-' ~ resource_claim_test_pool_02_guid
    - __state.status.lifespan.maximum == '2h'
    - __state.status.lifespan.relativeMaximum == '1h'
    - >-
        30 * 60 == (
          __state.status.lifespan.end | to_datetime('%Y-%m-%dT%H:%M:%SZ') -
          __state.status.lifespan.start | to_datetime('%Y-%m-%dT%H:%M:%SZ')
        ).total_seconds()

- name: Request lifespan end beyond alowed relative maximum for test-pool-02
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-pool-02
    namespace: "{{ poolboy_test_namespace }}"
    definition:
      spec:
        lifespan:
          end: "2999-12-31T00:00:00Z"

- name: Verify lifespan end is set according to relative maximum
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-pool-02
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  vars:
    __state: "{{ r_get_resource_claim.resources[0] }}"
    __lifespan_total_seconds: >-
      {{
        (
          __state.status.lifespan.end | to_datetime('%Y-%m-%dT%H:%M:%SZ') - now(true)
        ).total_seconds()
      }}
  failed_when: >-
    __lifespan_total_seconds | int < 3500 or __lifespan_total_seconds | int > 3700
  until: r_get_resource_claim is successful
  retries: 5
  delay: 1

- name: Verify ResourceHandles for test-pool-02 after bind
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    namespace: "{{ poolboy_namespace }}"
    label_selectors:
    - "{{ poolboy_domain }}/resource-pool-name = test-pool-02"
  register: r_get_resource_handles
  vars:
    __unbound_handles: >-
      {{ r_get_resource_handles.resources | json_query('[?spec.resourceClaim==null]') }}
  failed_when: >-
    __unbound_handles | length != 1

- name: Delete ResourcePool test-pool-02
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourcePool
    name: test-pool-02
    namespace: "{{ poolboy_namespace }}"
    state: absent

- name: Verify cleanup of ResourceHandles for test-pool-02 after delete
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    namespace: "{{ poolboy_namespace }}"
    label_selectors:
    - "{{ poolboy_domain }}/resource-pool-name = test-pool-02"
  register: r_get_resource_handles
  vars:
    __unbound_handles: >-
      {{ r_get_resource_handles.resources | json_query('[?spec.resourceClaim==null]') }}
  failed_when: >-
    __unbound_handles | length != 0
  until: r_get_resource_handles is successful
  retries: 5
  delay: 2

- name: Verify ResourceHandle for test-pool-02 not deleted along with pool
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    namespace: "{{ poolboy_namespace }}"
    name: "{{ resource_claim_test_pool_02_resource_handle_name }}"
  register: r_get_resource_handle
  failed_when: r_get_resource_handle.resources | length != 1

- name: Delete ResourceClaim test-pool-02
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-pool-02
    namespace: "{{ poolboy_test_namespace }}"
    state: absent

- name: Verify delete of ResourceClaim test-pool-02
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-pool-02
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: r_get_resource_claim.resources | length != 0
  until: r_get_resource_claim is success
  retries: 5
  delay: 1

- name: Verify delete of ResourceHandle for test-02
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    name: "{{ resource_claim_test_pool_02_resource_handle_name }}"
    namespace: "{{ poolboy_namespace }}"
  register: r_get_resource_handle
  failed_when: r_get_resource_handle.resources | length != 0
  until: r_get_resource_handle is success
  retries: 5
  delay: 1
