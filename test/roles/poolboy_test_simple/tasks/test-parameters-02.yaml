---
- name: Create ResourceProvider test-parameters-02-base
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceProvider
      metadata:
        name: test-parameters-02-base
        namespace: "{{ poolboy_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        override:
          apiVersion: "{{ poolboy_domain }}/v1"
          kind: ResourceClaimTest
          metadata:
            name: test-parameters-02-{% raw %}{{ guid }}-base-{{ resource_index }}{% endraw %}
            namespace: "{{ poolboy_test_namespace }}"
        parameters:
        - name: stringvar
          required: true
          validation:
            openAPIV3Schema:
              type: sting
              default: one
              enum:
              - one
              - two
              - three
        - name: numbervar
          allowUpdate: true
          validation:
            openAPIV3Schema:
              type: integer
              default: 0
              minimum: 0
        template:
          definition:
            spec:
              numbervalue: "{% raw %}{{ numbervar | int }}{% endraw %}"
              stringvalue: "{% raw %}{{ stringvar }}{% endraw %}"
          enable: true
        updateFilters:
        - pathMatch: /spec/.*
          allowedOps:
          - replace

- name: Create ResourceProvider test-parameters-02-binder
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceProvider
      metadata:
        name: test-parameters-02-binder
        namespace: "{{ poolboy_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        linkedResourceProviders:
        - name: test-parameters-02-base
          parameterValues:
            numbervar: "{% raw %}{{ (numbervar * 10) | int }}{% endraw %}"
            stringvar: "{% raw %}{{ stringvar }}{% endraw %}"
          resourceName: base-a
        - name: test-parameters-02-base
          parameterValues:
            numbervar: "{% raw %}{{ (numbervar * 100) | int }}{% endraw %}"
            stringvar: "{% raw %}{{ stringvar }}{% endraw %}"
          resourceName: base-b
        override:
          apiVersion: "{{ poolboy_domain }}/v1"
          kind: ResourceClaimTest
          metadata:
            name: test-parameters-02-{% raw %}{{ guid }}{% endraw %}-binder
            namespace: "{{ poolboy_test_namespace }}"
        parameters:
        - name: stringvar
          required: true
          validation:
            openAPIV3Schema:
              type: sting
              default: one
              enum:
              - one
              - two
              - three
        - name: numbervar
          allowUpdate: true
          validation:
            checks:
            - name: max for one
              check: numbervar <= 1 or stringvar != 'one'
            - name: max for two
              check: numbervar <= 2 or stringvar != 'two'
            - name: max for three
              check: numbervar <= 3 or stringvar != 'three'
            openAPIV3Schema:
              type: integer
              default: 0
              minimum: 0
        resourceName: binder
        template:
          definition:
            spec:
              numbervalue: "{% raw %}{{ numbervar | int }}{% endraw %}"
              stringvalue: "{% raw %}{{ stringvar }}{% endraw %}"
          enable: true
        updateFilters:
        - pathMatch: /spec/.*
          allowedOps:
          - replace

- name: Create ResourceClaim test-parameters-02-a
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceClaim
      metadata:
        name: test-parameters-02-a
        namespace: "{{ poolboy_test_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        provider:
          name: test-parameters-02-binder
          parameterValues:
            stringvar: one
            numbervar: 1

- name: Verify handling of ResourceClaim test-parameters-02-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-parameters-02-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: >-
    r_get_resource_claim.resources[0].status.resources[0].name != 'base-a' or
    r_get_resource_claim.resources[0].status.resources[0].provider.name != 'test-parameters-02-base' or
    r_get_resource_claim.resources[0].status.resources[0].state is undefined or
    r_get_resource_claim.resources[0].status.resources[1].name != 'base-b' or
    r_get_resource_claim.resources[0].status.resources[1].provider.name != 'test-parameters-02-base' or
    r_get_resource_claim.resources[0].status.resources[1].state is undefined or
    r_get_resource_claim.resources[0].status.resources[2].name != 'test-parameters-02-binder' or
    r_get_resource_claim.resources[0].status.resources[2].provider.name != 'binder' or
    r_get_resource_claim.resources[0].status.resources[2].state is undefined
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- fail:
- name: Save facts from for ResourceClaim test-parameters-02-a
  vars:
    __name: >-
      {{ r_get_resource_claim.resources[0].status.resourceHandle.name }}
  set_fact:
    resource_claim_test_parameters_01_a_resource_handle_name: "{{ __name }}"
    resource_claim_test_parameters_01_a_resource_name: test-parameters-02-{{ __name[5:] }}

- name: Verify state of ResourceClaim test-parameters-02-a
  vars:
    __state: "{{ r_get_resource_claim.resources[0] }}"
  assert:
    that:
    - __state.status.resources[0].state.metadata.name == resource_claim_test_parameters_01_a_resource_name

- name: Verify creation of ResourceClaimTest test-parameters-02-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaimTest
    name: "{{ resource_claim_test_parameters_01_a_resource_name }}"
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim_test
  failed_when:  r_get_resource_claim_test.resources | length != 1
  until: r_get_resource_claim_test is success
  delay: 1
  retries: 10

- name: Verify state of ResourceClaimTest for test-parameters-02-a
  vars:
    __state: "{{ r_get_resource_claim_test.resources[0] }}"
  assert:
    that:
    - __state.spec.numbervalue | int == 1
    - __state.spec.stringvalue == 'one'

- name: Update parameters of ResourceClaim test-parameters-02-a
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-parameters-02-a
    namespace: "{{ poolboy_test_namespace }}"
    definition:
      spec:
        provider:
          parameterValues:
            stringvar: two
            numbervar: 2

- name: Verify update of ResourceClaimTest for test-parameters-02-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaimTest
    name: "{{ resource_claim_test_parameters_01_a_resource_name }}"
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim_test
  failed_when: >-
    r_get_resource_claim_test.resources | length != 1 or
    r_get_resource_claim_test.resources[0].spec.stringvalue != 'two' or
    r_get_resource_claim_test.resources[0].spec.numbervalue != 2
  until: r_get_resource_claim_test is success
  delay: 1
  retries: 10

- name: Delete ResourceClaim test-parameters-02-a
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-parameters-02-a
    namespace: "{{ poolboy_test_namespace }}"
    state: absent

- name: Verify delete of ResourceClaim test-parameters-02-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-parameters-02-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: r_get_resource_claim.resources | length != 0
  until: r_get_resource_claim is success
  retries: 5
  delay: 1

- name: Verify delete of ResourceHandle for test-parameters-02-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    name: "{{ resource_claim_test_parameters_01_a_resource_handle_name }}"
    namespace: "{{ poolboy_namespace }}"
  register: r_get_resource_handle
  failed_when: r_get_resource_handle.resources | length != 0
  until: r_get_resource_handle is success
  retries: 5
  delay: 1

- name: Verify delete of ResourceClaimTest test-parameters-02-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaimTest
    name: "{{ resource_claim_test_parameters_01_a_resource_name }}"
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim_test
  failed_when: r_get_resource_claim_test.resources | length != 0
  until: r_get_resource_claim_test is success
  delay: 1
  retries: 10
...
