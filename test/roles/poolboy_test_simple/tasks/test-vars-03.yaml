---
- name: Create ResourceProvider test-vars-03
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceProvider
      metadata:
        name: test-vars-03
        namespace: "{{ poolboy_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        override:
          apiVersion: "{{ poolboy_domain }}/v1"
          kind: ResourceClaimTest
          metadata:
            namespace: "{{ poolboy_test_namespace }}"
        template:
          enable: true
        updateFilters:
        - pathMatch: /spec/(start|end)
          allowedOps:
          - replace
        validation:
          checks:
          - name: end relative to start
            check: >-
              spec.end | to_datetime('%Y-%m-%dT%H:%M:%S%z') - spec.start | to_datetime('%Y-%m-%dT%H:%M:%S%z') < maximum_interval | parse_time_interval
          - name: end relative to now
            check: spec.end | to_datetime('%Y-%m-%dT%H:%M:%S%z') - now(true) < maximum_interval | parse_time_interval
          openAPIV3Schema:
            additionalProperties: false
            properties:
              metadata:
                additionalProperties: false
                properties:
                  name:
                    pattern: ^test-vars-03-[a-z0-9]+$
                    type: string
                required:
                - name
                type: object
              spec:
                additionalProperties: false
                properties:
                  end:
                    pattern: '^\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\dZ'
                    type: string
                  start:
                    pattern: '^\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\dZ'
                    type: string
                required:
                - end
                - start
                type: object
        vars:
          maximum_interval: 1h

- name: Set start timestamp
  set_fact:
    test_vars_03_start_ts: >-
      {{ now(true).strftime('%FT%TZ') }}

- name: Set end timestamps
  set_fact:
    test_vars_03_final_end_ts: >-
      {{ '%FT%TZ' | strftime((test_vars_03_start_ts | to_datetime('%Y-%m-%dT%H:%M:%S%z')).strftime('%s') | int + 4800) }}
    test_vars_03_initial_end_ts: >-
      {{ '%FT%TZ' | strftime((test_vars_03_start_ts | to_datetime('%Y-%m-%dT%H:%M:%S%z')).strftime('%s') | int + 60) }}

- name: Create ResourceClaim test-vars-03-a
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceClaim
      metadata:
        name: test-vars-03-a
        namespace: "{{ poolboy_test_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        resources:
        - provider:
            name: test-vars-03
          template:
            metadata:
              name: test-vars-03-a
            spec:
              end: "{{ test_vars_03_initial_end_ts }}"
              start: "{{ test_vars_03_start_ts }}"

- name: Verify handling of ResourceClaim test-vars-03-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-vars-03-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: >-
    r_get_resource_claim.resources[0].status.resources[0].state is undefined
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- name: Save facts from for ResourceClaim test-vars-03-a
  set_fact:
    resource_claim_test_vars_03_a_resource_handle_name: >-
      {{ r_get_resource_claim.resources[0].status.resourceHandle.name }}

- name: Verify state of ResourceClaim test-vars-03-a
  vars:
    __state: "{{ r_get_resource_claim.resources[0] }}"
  assert:
    that:
    - __state.status.resources[0].state.metadata.name == 'test-vars-03-a'

- name: Verify creation of ResourceClaimTest test-vars-03-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaimTest
    name: test-vars-03-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim_test
  failed_when:  r_get_resource_claim_test.resources | length != 1
  until: r_get_resource_claim_test is success
  delay: 1
  retries: 10

- name: Verify state of ResourceClaimTest test-vars-03-a
  vars:
    __state: "{{ r_get_resource_claim_test.resources[0] }}"
  assert:
    that:
    - __state.spec.end == test_vars_03_initial_end_ts
    - __state.spec.start == test_vars_03_start_ts

- name: Update var for ResourceClaim to exceed maximum interval
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-vars-03-a
    namespace: "{{ poolboy_test_namespace }}"
    definition:
      spec:
        resources:
        - provider:
            name: test-vars-03
          template:
            metadata:
              name: test-vars-03-a
            spec:
              end: "{{ test_vars_03_final_end_ts }}"
              start: "{{ test_vars_03_start_ts }}"

- name: Verify template validation failure for ResourceClaim
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-vars-03-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: >-
    r_get_resource_claim.resources[0].status.resources[0].validationError != 'Validation check failed: end relative to start'
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- name: Update ResourceHandle for ResourceClaim test-vars-03-a to extend maximum
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    name: "{{ resource_claim_test_vars_03_a_resource_handle_name }}"
    namespace: "{{ poolboy_namespace }}"
    definition:
      spec:
        vars:
          maximum_interval: 2h

- name: Verify template validation success for ResourceClaim
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-vars-03-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: >-
    r_get_resource_claim.resources[0].status.resources[0].validationError is defined
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- name: Verify update of ResourceClaimTest test-vars-03-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaimTest
    name: test-vars-03-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim_test
  failed_when: >-
    r_get_resource_claim_test.resources | length != 1 or
    r_get_resource_claim_test.resources[0].spec.end != test_vars_03_final_end_ts
  until: r_get_resource_claim_test is success
  delay: 1
  retries: 10

- name: Delete ResourceClaim test-vars-03-a
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-vars-03-a
    namespace: "{{ poolboy_test_namespace }}"
    state: absent

- name: Verify delete of ResourceClaim test-vars-03-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-vars-03-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: r_get_resource_claim.resources | length != 0
  until: r_get_resource_claim is success
  retries: 5
  delay: 1

- name: Verify delete of ResourceHandle for test-vars-03-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    name: "{{ resource_claim_test_vars_03_a_resource_handle_name }}"
    namespace: "{{ poolboy_namespace }}"
  register: r_get_resource_handle
  failed_when: r_get_resource_handle.resources | length != 0
  until: r_get_resource_handle is success
  retries: 5
  delay: 1

- name: Verify delete of ResourceClaimTest test-vars-03-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaimTest
    name: test-vars-03-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim_test
  failed_when: r_get_resource_claim_test.resources | length != 0
  until: r_get_resource_claim_test is success
  delay: 1
  retries: 10
...
