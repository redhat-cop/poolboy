---
- name: Create ResourceProvider test-vars-01
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceProvider
      metadata:
        name: test-vars-01
        namespace: "{{ poolboy_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        override:
          apiVersion: "{{ poolboy_domain }}/v1"
          kind: ResourceClaimTest
          metadata:
            namespace: "{{ poolboy_test_namespace }}"
          spec:
            foo: "{% raw %}{{ foo }}{% endraw %}"
        template:
          enable: true
        updateFilters:
        - pathMatch: /spec/foo
          allowedOps:
          - replace
        validation:
          openAPIV3Schema:
            additionalProperties: false
            required:
            - metadata
            properties:
              metadata:
                additionalProperties: false
                properties:
                  name:
                    pattern: ^test-vars-01-[a-z0-9]+$
                    type: string
                required:
                - name
                type: object
        vars:
          foo: bar

- name: Create ResourceClaim test-vars-01-a
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceClaim
      metadata:
        name: test-vars-01-a
        namespace: "{{ poolboy_test_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        resources:
        - provider:
            name: test-vars-01
          template:
            metadata:
              name: test-vars-01-a

- name: Verify handling of ResourceClaim test-vars-01-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-vars-01-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: >-
    r_get_resource_claim.resources[0].status.resources[0].state is undefined
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- name: Save facts from for ResourceClaim test-vars-01-a
  set_fact:
    resource_claim_test_vars_01_a_resource_handle_name: >-
      {{ r_get_resource_claim.resources[0].status.resourceHandle.name }}

- name: Verify state of ResourceClaim test-vars-01-a
  vars:
    __state: "{{ r_get_resource_claim.resources[0] }}"
  assert:
    that:
    - __state.status.resources[0].state.metadata.name == 'test-vars-01-a'

- name: Verify creation of ResourceClaimTest test-vars-01-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaimTest
    name: test-vars-01-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim_test
  failed_when:  r_get_resource_claim_test.resources | length != 1
  until: r_get_resource_claim_test is success
  delay: 1
  retries: 10

- name: Verify state of ResourceClaimTest test-vars-01-a
  vars:
    __state: "{{ r_get_resource_claim_test.resources[0] }}"
  assert:
    that:
    - __state.spec.foo == 'bar'

- name: Update var for ResourceHandle for test-vars-01-a
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    name: "{{ resource_claim_test_vars_01_a_resource_handle_name }}"
    namespace: "{{ poolboy_namespace }}"
    definition:
      spec:
        vars:
          foo: updated

- name: Verify update of ResourceClaimTest test-vars-01-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaimTest
    name: test-vars-01-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim_test
  failed_when:  r_get_resource_claim_test.resources[0].spec.foo != 'updated'
  until: r_get_resource_claim_test is success
  delay: 1
  retries: 10

- name: Delete ResourceClaim test-vars-01-a
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-vars-01-a
    namespace: "{{ poolboy_test_namespace }}"
    state: absent

- name: Verify delete of ResourceClaim test-vars-01-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-vars-01-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: r_get_resource_claim.resources | length != 0
  until: r_get_resource_claim is success
  retries: 5
  delay: 1

- name: Verify delete of ResourceHandle for test-vars-01-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    name: "{{ resource_claim_test_vars_01_a_resource_handle_name }}"
    namespace: "{{ poolboy_namespace }}"
  register: r_get_resource_handle
  failed_when: r_get_resource_handle.resources | length != 0
  until: r_get_resource_handle is success
  retries: 5
  delay: 1

- name: Verify delete of ResourceClaimTest test-vars-01-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaimTest
    name: test-vars-01-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim_test
  failed_when: r_get_resource_claim_test.resources | length != 0
  until: r_get_resource_claim_test is success
  delay: 1
  retries: 10
...
