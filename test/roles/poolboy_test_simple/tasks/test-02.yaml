---
#
# Test lifespan
#
- name: Create ResourceProvider test-02
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceProvider
      metadata:
        name: test-02
        namespace: "{{ poolboy_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        lifespan:
          default: >-
            {%- raw -%}
            {%- if 'extended-lifespan' in resource_claim.annotations -%}
            12h
            {%- else -%}
            30m
            {%- endif -%}
            {%- endraw -%}
          maximum: >-
            {%- raw -%}
            {%- if 'extended-lifespan' in resource_claim.annotations -%}
            2d
            {%- else -%}
            2h
            {%- endif -%}
            {%- endraw -%}
          relativeMaximum: >-
            {%- raw -%}
            {%- if 'extended-lifespan' in resource_claim.annotations -%}
            1d
            {%- else -%}
            1h
            {%- endif -%}
            {%- endraw -%}
        override:
          apiVersion: "{{ poolboy_domain }}/v1"
          kind: ResourceClaimTest
          metadata:
            namespace: "{{ poolboy_test_namespace }}"
          spec:
            foo: bar
        validation:
          openAPIV3Schema:
            additionalProperties: false
            properties:
              metadata:
                additionalProperties: false
                properties:
                  name:
                    pattern: ^test-02-[a-z0-9]+$
                    type: string
                required:
                - name
                type: object

- name: Create ResourceClaim test-02
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceClaim
      metadata:
        name: test-02
        namespace: "{{ poolboy_test_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        resources:
        - provider:
            name: test-02
          template:
            metadata:
              name: test-02-a

- name: Verify handling of ResourceClaim test-02
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-02
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: >-
    r_get_resource_claim.resources[0].status.resources[0].state is undefined
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- name: Save facts from for ResourceClaim test-02
  set_fact:
    resource_claim_test_02_resource_handle_name: >-
      {{ r_get_resource_claim.resources[0].status.resourceHandle.name }}

- name: Verify state of ResourceClaim test-02
  vars:
    __state: "{{ r_get_resource_claim.resources[0] }}"
  assert:
    that:
    - __state.status.resources[0].state.metadata.name == 'test-02-a'
    - __state.status.lifespan.maximum == '2h'
    - __state.status.lifespan.relativeMaximum == '1h'
    - >-
        30 * 60 == (
          __state.status.lifespan.end | to_datetime('%Y-%m-%dT%H:%M:%SZ') -
          __state.status.lifespan.start | to_datetime('%Y-%m-%dT%H:%M:%SZ')
        ).total_seconds()

- name: Verify creation of ResourceClaimTest test-02-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaimTest
    name: test-02-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim_test
  failed_when:  r_get_resource_claim_test.resources | length != 1
  until: r_get_resource_claim_test is success
  delay: 1
  retries: 10

- name: Verify state of ResourceClaimTest test-02-a
  vars:
    __state: "{{ r_get_resource_claim_test.resources[0] }}"
  assert:
    that:
    - __state.spec.foo == 'bar'

- name: Request lifespan extension for test-02
  vars:
    __state: "{{ r_get_resource_claim.resources[0] }}"
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-02
    namespace: "{{ poolboy_test_namespace }}"
    definition:
      spec:
        lifespan:
          end: >-
            {{ "%FT%TZ" | strftime(
                 (__state.status.lifespan.start | to_datetime('%Y-%m-%dT%H:%M:%SZ')).strftime("%s") | int + 45 * 60
               )
            }}

- name: Verify lifespan extension of ResourceClaim test-02
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-02
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  vars:
    __state: "{{ r_get_resource_claim.resources[0] }}"
  failed_when: >-
    45 * 60 != (
      __state.status.lifespan.end | to_datetime('%Y-%m-%dT%H:%M:%SZ') -
      __state.status.lifespan.start | to_datetime('%Y-%m-%dT%H:%M:%SZ')
    ).total_seconds()
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- name: Set annotation for extended-lifespan
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-02
    namespace: "{{ poolboy_test_namespace }}"
    definition:
      metadata:
        annotations:
          extended-lifespan: ''

- name: Verify lifespan maximum change for ResourceClaim test-02
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-02
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  vars:
    __state: "{{ r_get_resource_claim.resources[0] }}"
  failed_when: >-
    __state.status.lifespan.maximum != '2d' or
    __state.status.lifespan.relativeMaximum != '1d'
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- name: Selt lifespan test-02 to end now
  vars:
    __state: "{{ r_get_resource_claim.resources[0] }}"
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-02
    namespace: "{{ poolboy_test_namespace }}"
    definition:
      spec:
        lifespan:
          end: "{{ now(true).strftime('%FT%TZ') }}"

- name: Verify delete of ResourceClaim test-02
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-02
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: r_get_resource_claim.resources | length != 0
  until: r_get_resource_claim is success
  retries: 5
  delay: 1

- name: Verify delete of ResourceHandle for test-02
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    name: "{{ resource_claim_test_02_resource_handle_name }}"
    namespace: "{{ poolboy_namespace }}"
  register: r_get_resource_handle
  failed_when: r_get_resource_handle.resources | length != 0
  until: r_get_resource_handle is success
  retries: 5
  delay: 1

- name: Verify delete of ResourceClaimTest test-02-a
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaimTest
    name: test-02-a
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim_test
  failed_when: r_get_resource_claim_test.resources | length != 0
  until: r_get_resource_claim_test is success
  delay: 1
  retries: 10
