---
- name: Create ResourceProvider test-approval-01
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceProvider
      metadata:
        name: test-approval-01
        namespace: "{{ poolboy_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        approval:
          pendingMessage: "Test Pending"
          required: true
        override:
          apiVersion: "{{ poolboy_domain }}/v1"
          kind: ResourceClaimTest
          metadata:
            name: test-parameters-01-{% raw %}{{ guid }}{% endraw %}
            namespace: "{{ poolboy_test_namespace }}"
        parameters:
        - name: numbervar
          allowUpdate: true
          validation:
            openAPIV3Schema:
              type: integer
              default: 0
              minimum: 0
        template:
          definition:
            spec:
              numbervalue: "{% raw %}{{ numbervar | int }}{% endraw %}"
          enable: true

- name: Create ResourceClaim test-approval-01
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceClaim
      metadata:
        name: test-approval-01
        namespace: "{{ poolboy_test_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        provider:
          name: test-approval-01
          parameterValues:
            numbervar: 1

- name: Verify ResourceClaim test-approval-01 is awaiting approval
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-approval-01
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: >-
    r_get_resource_claim.resources[0].status.approval.message | default('') != 'Test Pending' or
    r_get_resource_claim.resources[0].status.approval.state | default('') != 'pending' or
    r_get_resource_claim.resources[0].status.lifespan is defined or
    r_get_resource_claim.resources[0].status.resourceHandle is defined or
    r_get_resource_claim.resources[0].status.resources is defined or
    r_get_resource_claim.resources[0].status.summary is defined
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- name: Approve ResourceClaim test-approval-01
  poolboy_test_merge_patch_status:
    api_version: "{{ poolboy_domain }}/v1"
    name: test-approval-01
    namespace: "{{ poolboy_test_namespace }}"
    plural: resourceclaims
    status_patch:
      approval:
        state: approved

- name: Verify handling of ResourceClaim test-approval-01
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-approval-01
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: >-
    r_get_resource_claim.resources[0].status.lifespan is undefined or
    r_get_resource_claim.resources[0].status.resourceHandle is undefined or
    r_get_resource_claim.resources[0].status.resources[0].state is undefined
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- name: Delete ResourceClaim test-approval-01
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-approval-01
    namespace: "{{ poolboy_test_namespace }}"
    state: absent

- name: Verify delete of ResourceClaim test-approval-01
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-approval-01
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: r_get_resource_claim.resources | length != 0
  until: r_get_resource_claim is success
  retries: 5
  delay: 1

- name: Verify delete of ResourceHandle for test-approval-01
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    name: "{{ resource_claim_test_01_resource_handle_name }}"
    namespace: "{{ poolboy_namespace }}"
  register: r_get_resource_handle
  failed_when: r_get_resource_handle.resources | length != 0
  until: r_get_resource_handle is success
  retries: 5
  delay: 1
...
