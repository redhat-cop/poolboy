---
- name: Create ResourceProvider test-pool-03
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceProvider
      metadata:
        name: test-pool-03
        namespace: "{{ poolboy_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        override:
          apiVersion: "{{ poolboy_domain }}/v1"
          kind: ResourceClaimTest
          metadata:
            name: "test-pool-03-{% raw %}{{ guid }}{% endraw %}"
            namespace: "{{ poolboy_test_namespace }}"
        parameters:
        - name: stringvar
          allowUpdate: true
          required: true
          validation:
            openAPIV3Schema:
              type: string
              default: one
              enum:
              - one
              - two
              - three
        - name: numbervar
          allowUpdate: true
          validation:
            openAPIV3Schema:
              type: integer
              default: 0
              minimum: 0
        template:
          definition:
            spec:
              numbervalue: "{% raw %}{{ numbervar | int }}{% endraw %}"
              stringvalue: "{% raw %}{{ stringvar }}{% endraw %}"
          enable: true
        updateFilters:
        - pathMatch: /spec/.*
          allowedOps:
          - replace

- name: Create ResourcePool test-pool-03
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourcePool
      metadata:
        name: test-pool-03
        namespace: "{{ poolboy_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        minAvailable: 2
        provider:
          name: test-pool-03
          parameterValues:
            numbervar: 1

- name: Verify ResourceHandles for test-pool-03
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    namespace: "{{ poolboy_namespace }}"
    label_selectors:
    - "{{ poolboy_domain }}/resource-pool-name = test-pool-03"
  register: r_get_resource_handles
  vars:
    __unbound_handles: >-
      {{ r_get_resource_handles.resources | json_query('[?spec.resourceClaim==null]') }}
  failed_when: >-
    __unbound_handles | length != 2 or
    __unbound_handles[0].spec.resources is undefined or
    __unbound_handles[0].spec.resources[0].reference is undefined
  until: r_get_resource_handles is success
  delay: 1
  retries: 10

- name: Set facts from for ResourcePool test-pool-03 ResourceHandles
  vars:
    __state: >-
      {{ r_get_resource_handles.resources[0] }}
  set_fact:
    resource_claim_test_name: "{{ __state.spec.resources[0].reference.name }}"

- name: Verify creation of ResourceClaimTest for test-pool-03
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaimTest
    name: "{{ resource_claim_test_name }}"
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim_test
  failed_when:  r_get_resource_claim_test.resources | length != 1
  until: r_get_resource_claim_test is success
  delay: 1
  retries: 10

- name: Verify state of ResourceClaimTest for test-pool-03
  vars:
    __state: "{{ r_get_resource_claim_test.resources[0] }}"
  assert:
    that:
    - __state.spec.numbervalue == 1
    - __state.spec.stringvalue == "one"

- name: Create ResourceClaim test-pool-03
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceClaim
      metadata:
        name: test-pool-03
        namespace: "{{ poolboy_test_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        provider:
          name: test-pool-03
          parameterValues:
            numbervar: 1

- name: Verify handling of ResourceClaim test-pool-03
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-pool-03
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: >-
    r_get_resource_claim.resources[0].status.resources[0].state is undefined
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- name: Save facts from for ResourceClaim test-pool-03
  set_fact:
    resource_claim_test_pool_03_guid: >-
      {{ r_get_resource_claim.resources[0].status.resourceHandle.name[-5:] }}
    resource_claim_test_pool_03_resource_handle_name: >-
      {{ r_get_resource_claim.resources[0].status.resourceHandle.name }}

- name: Verify state of ResourceClaim test-pool-03
  vars:
    __state: "{{ r_get_resource_claim.resources[0] }}"
  assert:
    that:
    - __state.status.resources[0].state.metadata.name == 'test-pool-03-' ~ resource_claim_test_pool_03_guid

- name: Verify ResourceHandles for test-pool-03 after bind
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    namespace: "{{ poolboy_namespace }}"
    label_selectors:
    - "{{ poolboy_domain }}/resource-pool-name = test-pool-03"
  register: r_get_resource_handles
  vars:
    __unbound_handles: >-
      {{ r_get_resource_handles.resources | json_query('[?spec.resourceClaim==null]') }}
  failed_when: >-
    __unbound_handles | length != 2

- name: Create ResourceClaim test-pool-03-no-parameters
  kubernetes.core.k8s:
    definition:
      apiVersion: "{{ poolboy_domain }}/v1"
      kind: ResourceClaim
      metadata:
        name: test-pool-03-no-parameters
        namespace: "{{ poolboy_test_namespace }}"
        labels: >-
          {{ {
            poolboy_domain ~ "/test": "simple"
          } }}
      spec:
        resources:
        - name: test-pool-03
          provider:
            apiVersion: poolboy.dev.local/v1
            kind: ResourceProvider
            name: test-pool-03
            namespace: poolboy-dev
          template:
            spec:
              numbervalue: 1
              stringvalue: one

- name: Verify handling of ResourceClaim test-pool-03-no-parameters
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-pool-03-no-parameters
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: >-
    r_get_resource_claim.resources[0].status.resourceHandle is undefined
  until: r_get_resource_claim is success
  delay: 1
  retries: 10

- name: Save facts from for ResourceClaim test-pool-03-no-parameters
  set_fact:
    resource_claim_test_pool_03_no_parameters_resource_handle_name: >-
      {{ r_get_resource_claim.resources[0].status.resourceHandle.name }}

- name: Verify state of ResourceHandle for ResourceClaim test-pool-03-no-parameters
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    name: "{{ r_get_resource_claim.resources[0].status.resourceHandle.name }}"
    namespace: "{{ poolboy_namespace }}"
  register: r_get_resource_handle

- name: Verify state of ResourceHandle for test-pool-03-no-parameters
  vars:
    __state: "{{ r_get_resource_handle.resources[0] }}"
  assert:
    that:
    - __state.spec.provider is undefined

- name: Delete ResourcePool test-pool-03
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourcePool
    name: test-pool-03
    namespace: "{{ poolboy_namespace }}"
    state: absent

- name: Verify cleanup of ResourceHandles for test-pool-03 after delete
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    namespace: "{{ poolboy_namespace }}"
    label_selectors:
    - "{{ poolboy_domain }}/resource-pool-name = test-pool-03"
  register: r_get_resource_handles
  vars:
    __unbound_handles: >-
      {{ r_get_resource_handles.resources | json_query('[?spec.resourceClaim==null]') }}
  failed_when: >-
    __unbound_handles | length != 0
  until: r_get_resource_handles is successful
  retries: 5
  delay: 2

- name: Verify ResourceHandle for test-pool-03 not deleted along with pool
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    namespace: "{{ poolboy_namespace }}"
    name: "{{ resource_claim_test_pool_03_resource_handle_name }}"
  register: r_get_resource_handle
  failed_when: r_get_resource_handle.resources | length != 1

- name: Delete ResourceClaim test-pool-03
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-pool-03
    namespace: "{{ poolboy_test_namespace }}"
    state: absent

- name: Verify delete of ResourceClaim test-pool-03
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-pool-03
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: r_get_resource_claim.resources | length != 0
  until: r_get_resource_claim is success
  retries: 5
  delay: 1

- name: Verify delete of ResourceHandle for test-03
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    name: "{{ resource_claim_test_pool_03_resource_handle_name }}"
    namespace: "{{ poolboy_namespace }}"
  register: r_get_resource_handle
  failed_when: r_get_resource_handle.resources | length != 0
  until: r_get_resource_handle is success
  retries: 5
  delay: 1

- name: Delete ResourceClaim test-pool-03-no-parameters
  kubernetes.core.k8s:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-pool-03-no-parameters
    namespace: "{{ poolboy_test_namespace }}"
    state: absent

- name: Verify delete of ResourceClaim test-pool-03-no-parameters
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceClaim
    name: test-pool-03
    namespace: "{{ poolboy_test_namespace }}"
  register: r_get_resource_claim
  failed_when: r_get_resource_claim.resources | length != 0
  until: r_get_resource_claim is success
  retries: 5
  delay: 1

- name: Verify delete of ResourceHandle for test-03
  kubernetes.core.k8s_info:
    api_version: "{{ poolboy_domain }}/v1"
    kind: ResourceHandle
    name: "{{ resource_claim_test_pool_03_no_parameters_resource_handle_name }}"
    namespace: "{{ poolboy_namespace }}"
  register: r_get_resource_handle
  failed_when: r_get_resource_handle.resources | length != 0
  until: r_get_resource_handle is success
  retries: 5
  delay: 1
