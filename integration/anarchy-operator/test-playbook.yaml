---
- hosts: localhost
  gather_facts: false
  vars:
    oc_cmd: oc
    anarchy_namespace: anarchy-operator
    anarchy_operator_domain: anarchy.gpte.redhat.com
    operator_domain: poolboy.gpte.redhat.com
    operator_namespace: poolboy
    operator_test_namespace: poolboy-test
  tasks:
  - name: Get test resource claims
    k8s_facts:
      api_version: "{{ operator_domain }}/v1"
      kind: ResourceClaim
      namespace: "{{ operator_test_namespace }}"
      label_selectors:
      - test=anarchy-integration
    register: test_claims

  - name: Remove test resource claims
    k8s:
      state: absent
      api_version: "{{ operator_domain }}/v1"
      kind: ResourceClaim
      name: "{{ claim.metadata.name }}"
      namespace: "{{ claim.metadata.namespace }}"
    loop: "{{ test_claims.resources }}"
    loop_control:
      label: "{{ claim.metadata.name }}"
      loop_var: claim

  - name: Create ResourceProvider anarchy-test
    k8s:
      state: present
      definition: "{{ resource_definition | from_yaml }}"
    vars:
      resource_definition: |
        apiVersion: {{ operator_domain }}/v1
        kind: ResourceProvider
        metadata:
          name: anarchy-test
          namespace: {{ operator_namespace }}
        spec:
          match:
            apiVersion: {{ anarchy_operator_domain }}/v1
            kind: AnarchySubject
            metadata:
              annotations:
                {{ operator_domain }}/resource-provider-name: anarchy-test
                {{ operator_domain }}/resource-provider-namespace: {{ operator_namespace }}
          matchIgnore:
          - /spec/vars/current_state
          - /spec/vars/desired_state
          default:
            spec:
              vars:
                desired_state: started
          override:
            metadata:
              namespace: {{ anarchy_namespace }}
            spec:
              vars:
                guid: >-{% raw %}
                  {{: resource_handle.metadata.name[5:]
                   if resource_handle.metadata.name.startswith('guid-')
                   else resource_handle.metadata.name :}}
        {% endraw %}
          updateFilters:
          - pathMatch: /spec/vars/desired_state
          validation:
            openAPIV3Schema:
              type: object
              required:
              - apiVersion
              - kind
              - metadata
              - spec
              additionalProperties: false
              properties:
                apiVersion:
                  type: string
                  enum:
                  - {{ anarchy_operator_domain }}/v1
                kind:
                  type: string
                  enum:
                  - AnarchySubject
                metadata:
                  type: object
                  additionalProperties: false
                  properties:
                    annotations:
                      type: object
                      additionalProperties:
                        type: string
                    generateName:
                      type: string
                    labels:
                      type: object
                      additionalProperties:
                        type: string
                spec:
                  type: object
                  required:
                  - governor
                  additionalProperties: false
                  properties:
                    governor:
                      type: string
                      enum:
                      - test
                    vars:
                      type: object
                      properties:
                        desired_state:
                          type: string
                          enum:
                          - started
                          - stopped

  - name: Create ResourceClaim anarchy-test-1
    k8s:
      state: present
      definition: "{{ resource_definition | from_yaml }}"
    vars:
      resource_definition: |
        apiVersion: {{ operator_domain }}/v1
        kind: ResourceClaim
        metadata:
          name: anarchy-test-1
          namespace: {{ operator_test_namespace }}
          labels:
            test: anarchy-integration
        spec:
          resources:
          - template:
              apiVersion: {{ anarchy_operator_domain }}/v1
              kind: AnarchySubject
              metadata:
                annotations:
                  {{ operator_domain }}/resource-provider-name: anarchy-test
                  {{ operator_domain }}/resource-provider-namespace: {{ operator_namespace }}
              spec:
                governor: test
                vars:
                  account_id: gpte
                  aws_hosted_zone_id: Z3IHLWJZOU9SRT
                  aws_region: us-east-1
                  babylon_scm_reference: three-tier-app-prod-1.14
                  cloud_provider: ec2
                  desired_state: started
                  email: babylon@example.com
                  env_type: three-tier-app
                  key_name: ocpkey
                  own_repo_path: http://admin.na.shared.opentlc.com/repos/ocp/3.6
                  subdomain_base_suffix: .example.opentlc.com

  - name: Pause for AnarchySubject provision
    pause:
      seconds: 45

  - name: Get resource claim anarchy-test-1
    k8s_facts:
      api_version: "{{ operator_domain }}/v1"
      kind: ResourceClaim
      name: anarchy-test-1
      namespace: "{{ operator_test_namespace }}"
    register: test_1_claim

  - name: Check claim anarchy-test-1
    assert:
      that:
      - claim.status.resources[0].state.kind == 'AnarchySubject'
      - claim.status.resources[0].state.metadata.namespace == anarchy_namespace
      - claim.status.resources[0].state.spec.vars.guid == claim.status.resourceHandle.name[-5:]
      - claim.status.resources[0].state.spec.vars.current_state == 'started'
      fail_msg: anarchy-test-1 resource not found as expected
      success_msg: anarchy-test-1 resource looks good
    vars:
      claim: "{{ test_1_claim.resources[0] }}"

  - name: Delete claim anarchy-test-1
    k8s:
      api_version: "{{ operator_domain }}/v1"
      kind: ResourceClaim
      name: anarchy-test-1
      namespace: "{{ operator_test_namespace }}"
      state: absent

  - name: Pause for AnarchySubject destroy
    pause:
      seconds: 45

  - name: Check that anarchy subject has been deleted
    k8s_facts:
      api_version:  claim.status.resource.apiVersion
      kind: claim.status.resources[0].state.kind
      name: claim.status.resources[0].state.metadata.name
      namespace: claim.status.resources[0].state.metadata.namespace
    vars:
      claim: "{{ test_1_claim.resources[0] }}"
    register: get_subject
    failed_when: get_subject.resources
