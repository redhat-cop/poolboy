# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace:
  # Specifies whether a namespace should be created
  create: true
  # The name of the namespace to use.
  # If not set and create is true, a name is generated using the name template
  name:

# Installing CustomResourceDefinitions requires elevated privileges (typically cluster-admin)
crds:
  create: true

operatorDomain:
  # Specifies whether the operator domain should be generatedi (default: poolboy.gpte.redhat.com)
  generate: true
  # The name of the operator domain to use
  # If not set and create is true, a name is generated using the operatorDomain template
  name:

anarchy:
  # Control whether anarchy integration should be created
  create: false
  domain: anarchy.gpte.redhat.com
  namespace: anarchy-operator
  service: anarchy-operator

deploy: true
replicaCount: 1

image:
  repository: quay.io/redhat-cop/poolboy
  pullPolicy: Always
  tagOverride: ""

admin:
  deploy: true
  image:
    repository: quay.io/redhat-cop/poolboy-admin
    pullPolicy: Always
    tagOverride: ""
  redisImage: image-registry.openshift-image-registry.svc:5000/openshift/redis:5-el8
  redisPassword: generate

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

service:
  type: ClusterIP
  port: 8000
  ports:
  - name: metrics
    port: 8000
    protocol: TCP
    targetPort: 8000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
